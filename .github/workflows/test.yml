---
name: Run tests

on:
  workflow_dispatch:
    inputs:
      bump_browser:
        description: "Bump Browser?"
        type: boolean
        default: false
      bump_cli:
        description: "Bump CLI?"
        type: boolean
        default: false
      bump_desktop:
        description: "Bump Desktop?"
        type: boolean
        default: false
      bump_web:
        description: "Bump Web?"
        type: boolean
        default: false
      version_number_override:
        description: "New version override (leave blank for automatic calculation, example: '2024.1.0')"
        required: false
        type: string

jobs:
  bump_version:
    name: Bump Version
    runs-on: ubuntu-22.04
    outputs:
      version_browser: ${{ steps.set-final-version-output.outputs.version_browser }}
      version_cli: ${{ steps.set-final-version-output.outputs.version_cli }}
      version_desktop: ${{ steps.set-final-version-output.outputs.version_desktop }}
      version_web: ${{ steps.set-final-version-output.outputs.version_web }}
    steps:
      - name: Validate version input
        if: ${{ inputs.version_number_override != '' }}
        uses: bitwarden/gh-actions/version-check@main
        with:
          version: ${{ inputs.version_number_override }}

      - name: Checkout Branch
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          ref: main

      ########################
      # VERSION BUMP SECTION #
      ########################

      ### Browser
      - name: Get current Browser version
        if: ${{ inputs.bump_browser == true }}
        id: current-browser-version
        run: |
          CURRENT_VERSION=$(cat package.json | jq -r '.version')
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        working-directory: apps/browser

      - name: Browser - Verify input version
        if: ${{ inputs.bump_browser == true && inputs.version_number_override != '' }}
        env:
          CURRENT_VERSION: ${{ steps.current-browser-version.outputs.version }}
          NEW_VERSION: ${{ inputs.version_number_override }}
        run: |
          # Error if version has not changed.
          if [[ "$NEW_VERSION" == "$CURRENT_VERSION" ]]; then
            echo "Version has not changed."
            exit 1
          fi

          # Check if version is newer.
          printf '%s\n' "${CURRENT_VERSION}" "${NEW_VERSION}" | sort -C -V
          if [ $? -eq 0 ]; then
            echo "Version check successful."
          else
            echo "Version check failed."
            exit 1
          fi
        working-directory: apps/browser

      - name: Calculate next Browser release version
        if: ${{ inputs.bump_browser == true && inputs.version_number_override == '' }}
        id: calculate-next-browser-version
        uses: bitwarden/gh-actions/version-next@main
        with:
          version: ${{ steps.current-browser-version.outputs.version }}

      - name: Bump Browser Version - Version Override
        if: ${{ inputs.bump_browser == true && inputs.version_number_override != '' }}
        id: bump-browser-version-override
        run: npm version --workspace=@bitwarden/browser ${{ inputs.version_number_override }}

      - name: Bump Browser Version - Automatic Calculation
        if: ${{ inputs.bump_browser == true && inputs.version_number_override == '' }}
        id: bump-browser-version-automatic
        env:
          VERSION: ${{ steps.calculate-next-browser-version.outputs.version }}
        run: npm version --workspace=@bitwarden/browser $VERSION

      - name: Bump Browser Version - Manifest - Version Override
        if: ${{ inputs.bump_browser == true && inputs.version_number_override != '' }}
        uses: bitwarden/gh-actions/version-bump@main
        with:
          file_path: "apps/browser/src/manifest.json"
          version: ${{ inputs.version_number_override }}

      - name: Bump Browser Version - Manifest - Automatic Calculation
        if: ${{ inputs.bump_browser == true && inputs.version_number_override == '' }}
        uses: bitwarden/gh-actions/version-bump@main
        with:
          file_path: "apps/browser/src/manifest.json"
          version: ${{ steps.calculate-next-browser-version.outputs.version }}

      - name: Bump Browser Version - Manifest v3 - Version Override
        if: ${{ inputs.bump_browser == true && inputs.version_number_override != '' }}
        uses: bitwarden/gh-actions/version-bump@main
        with:
          file_path: "apps/browser/src/manifest.v3.json"
          version: ${{ inputs.version_number_override }}

      - name: Bump Browser Version - Manifest v3 - Automatic Calculation
        if: ${{ inputs.bump_browser == true && inputs.version_number_override == '' }}
        uses: bitwarden/gh-actions/version-bump@main
        with:
          file_path: "apps/browser/src/manifest.v3.json"
          version: ${{ steps.calculate-next-browser-version.outputs.version }}

      - name: Run Prettier after Browser Version Bump
        if: ${{ inputs.bump_browser == true }}
        run: |
          npm install -g prettier
          prettier --write apps/browser/src/manifest.json
          prettier --write apps/browser/src/manifest.v3.json

      ### CLI
      - name: Get current CLI version
        if: ${{ inputs.bump_cli == true }}
        id: current-cli-version
        run: |
          CURRENT_VERSION=$(cat package.json | jq -r '.version')
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        working-directory: apps/cli

      - name: CLI - Verify input version
        if: ${{ inputs.bump_cli == true && inputs.version_number_override != '' }}
        env:
          CURRENT_VERSION: ${{ steps.current-cli-version.outputs.version }}
          NEW_VERSION: ${{ inputs.version_number_override }}
        run: |
          # Error if version has not changed.
          if [[ "$NEW_VERSION" == "$CURRENT_VERSION" ]]; then
            echo "Version has not changed."
            exit 1
          fi

          # Check if version is newer.
          printf '%s\n' "${CURRENT_VERSION}" "${NEW_VERSION}" | sort -C -V
          if [ $? -eq 0 ]; then
            echo "Version check successful."
          else
            echo "Version check failed."
            exit 1
          fi
        working-directory: apps/cli

      - name: Calculate next CLI release version
        if: ${{ inputs.bump_cli == true && inputs.version_number_override == '' }}
        id: calculate-next-cli-version
        uses: bitwarden/gh-actions/version-next@main
        with:
          version: ${{ steps.current-cli-version.outputs.version }}

      - name: Bump CLI Version - Version Override
        if: ${{ inputs.bump_cli == true && inputs.version_number_override != '' }}
        id: bump-cli-version-override
        run: npm version --workspace=@bitwarden/cli ${{ inputs.version_number_override }}

      - name: Bump CLI Version - Automatic Calculation
        if: ${{ inputs.bump_cli == true && inputs.version_number_override == '' }}
        id: bump-cli-version-automatic
        env:
          VERSION: ${{ steps.calculate-next-cli-version.outputs.version }}
        run: npm version --workspace=@bitwarden/cli $VERSION

      ### Desktop
      - name: Get current Desktop version
        if: ${{ inputs.bump_desktop == true }}
        id: current-desktop-version
        run: |
          CURRENT_VERSION=$(cat package.json | jq -r '.version')
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        working-directory: apps/desktop

      - name: Desktop - Verify input version
        if: ${{ inputs.bump_desktop == true && inputs.version_number_override != '' }}
        env:
          CURRENT_VERSION: ${{ steps.current-desktop-version.outputs.version }}
          NEW_VERSION: ${{ inputs.version_number_override }}
        run: |
          # Error if version has not changed.
          if [[ "$NEW_VERSION" == "$CURRENT_VERSION" ]]; then
            echo "Version has not changed."
            exit 1
          fi

          # Check if version is newer.
          printf '%s\n' "${CURRENT_VERSION}" "${NEW_VERSION}" | sort -C -V
          if [ $? -eq 0 ]; then
            echo "Version check successful."
          else
            echo "Version check failed."
            exit 1
          fi
        working-directory: apps/desktop

      - name: Calculate next Desktop release version
        if: ${{ inputs.bump_desktop == true && inputs.version_number_override == '' }}
        id: calculate-next-desktop-version
        uses: bitwarden/gh-actions/version-next@main
        with:
          version: ${{ steps.current-desktop-version.outputs.version }}

      - name: Bump Desktop Version - Root - Version Override
        if: ${{ inputs.bump_desktop == true && inputs.version_number_override != '' }}
        id: bump-desktop-version-override
        run: npm version --workspace=@bitwarden/desktop ${{ inputs.version_number_override }}

      - name: Bump Desktop Version - Root - Automatic Calculation
        if: ${{ inputs.bump_desktop == true && inputs.version_number_override == '' }}
        id: bump-desktop-version-automatic
        env:
          VERSION: ${{ steps.calculate-next-desktop-version.outputs.version }}
        run: npm version --workspace=@bitwarden/desktop $VERSION

      - name: Bump Desktop Version - App - Version Override
        if: ${{ inputs.bump_desktop == true && inputs.version_number_override != '' }}
        run: npm version ${{ inputs.version_number_override }}
        working-directory: "apps/desktop/src"

      - name: Bump Desktop Version - App - Automatic Calculation
        if: ${{ inputs.bump_desktop == true && inputs.version_number_override == '' }}
        env:
          VERSION: ${{ steps.calculate-next-desktop-version.outputs.version }}
        run: npm version $VERSION
        working-directory: "apps/desktop/src"

      ### Web
      - name: Get current Web version
        if: ${{ inputs.bump_web == true }}
        id: current-web-version
        run: |
          CURRENT_VERSION=$(cat package.json | jq -r '.version')
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        working-directory: apps/web

      - name: Web - Verify input version
        if: ${{ inputs.bump_web == true && inputs.version_number_override != '' }}
        env:
          CURRENT_VERSION: ${{ steps.current-web-version.outputs.version }}
          NEW_VERSION: ${{ inputs.version_number_override }}
        run: |
          # Error if version has not changed.
          if [[ "$NEW_VERSION" == "$CURRENT_VERSION" ]]; then
            echo "Version has not changed."
            exit 1
          fi

          # Check if version is newer.
          printf '%s\n' "${CURRENT_VERSION}" "${NEW_VERSION}" | sort -C -V
          if [ $? -eq 0 ]; then
            echo "Version check successful."
          else
            echo "Version check failed."
            exit 1
          fi
        working-directory: apps/web

      - name: Calculate next Web release version
        if: ${{ inputs.bump_web == true && inputs.version_number_override == '' }}
        id: calculate-next-web-version
        uses: bitwarden/gh-actions/version-next@main
        with:
          version: ${{ steps.current-web-version.outputs.version }}

      - name: Bump Web Version - Version Override
        if: ${{ inputs.bump_web == true && inputs.version_number_override != '' }}
        id: bump-web-version-override
        run: npm version --workspace=@bitwarden/web-vault ${{ inputs.version_number_override }}

      - name: Bump Web Version - Automatic Calculation
        if: ${{ inputs.bump_web == true && inputs.version_number_override == '' }}
        id: bump-web-version-automatic
        env:
          VERSION: ${{ steps.calculate-next-web-version.outputs.version }}
        run: npm version --workspace=@bitwarden/web-vault $VERSION

      ########################

      - name: Set final version output
        id: set-final-version-output
        run: |
          if [[ "${{ steps.bump-browser-version-override.outcome }}" = "success" ]]; then
            echo "version_browser=${{ inputs.version_number_override }}" >> $GITHUB_OUTPUT
          elif [[ "${{ steps.bump-browser-version-automatic.outcome }}" = "success" ]]; then
            echo "version_browser=${{ steps.calculate-next-browser-version.outputs.version }}" >> $GITHUB_OUTPUT
          fi

          if [[ "${{ steps.bump-cli-version-override.outcome }}" = "success" ]]; then
            echo "version_cli=${{ inputs.version_number_override }}" >> $GITHUB_OUTPUT
          elif [[ "${{ steps.bump-cli-version-automatic.outcome }}" = "success" ]]; then
            echo "version_cli=${{ steps.calculate-next-cli-version.outputs.version }}" >> $GITHUB_OUTPUT
          fi

          if [[ "${{ steps.bump-desktop-version-override.outcome }}" = "success" ]]; then
            echo "version_desktop=${{ inputs.version_number_override }}" >> $GITHUB_OUTPUT
          elif [[ "${{ steps.bump-desktop-version-automatic.outcome }}" = "success" ]]; then
            echo "version_desktop=${{ steps.calculate-next-desktop-version.outputs.version }}" >> $GITHUB_OUTPUT
          fi

          if [[ "${{ steps.bump-web-version-override.outcome }}" = "success" ]]; then
            echo "version_web=${{ inputs.version_number_override }}" >> $GITHUB_OUTPUT
          elif [[ "${{ steps.bump-web-version-automatic.outcome }}" = "success" ]]; then
            echo "version_web=${{ steps.calculate-next-web-version.outputs.version }}" >> $GITHUB_OUTPUT
          fi


  cut_rc:
    name: TEST - Cut RC branch
    needs: bump_version
    runs-on: ubuntu-22.04
    steps:
      - name: Send Slack notification of version bumps
        env:
          BROWSER_VERSION: ${{ needs.bump_version.outputs.version_browser }}
          CLI_VERSION: ${{ needs.bump_version.outputs.version_cli }}
          DESKTOP_VERSION: ${{ needs.bump_version.outputs.version_desktop }}
          WEB_VERSION: ${{ needs.bump_version.outputs.version_web }}
        run: |
          MESSAGE=""
          if [[ "${{ inputs.bump_browser }}" = "true" ]]; then
            MESSAGE+="Browser bumped to version $BROWSER_VERSION.\n"
          fi

          if [[ "${{ inputs.bump_cli }}" = "true" ]]; then
            MESSAGE+="CLI bumped to version $CLI_VERSION.\n"
          fi

          if [[ "${{ inputs.bump_desktop }}" = "true" ]]; then
            MESSAGE+="Desktop bumped to version $DESKTOP_VERSION.\n"
          fi

          if [[ "${{ inputs.bump_web }}" = "true" ]]; then
            MESSAGE+="Web bumped to version $WEB_VERSION.\n"
          fi

          echo "$MESSAGE"